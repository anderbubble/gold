  <chapter id="Jobs">
    <title>Managing Jobs</title>
    <para>
Gold can track the jobs that run on your system, recording the charges and resources used for each job. Typically, a job record is created when the resource manager charges for a job. Job quotes, reservations, charges and refunds can be issued.
    </para>

    <sect1 id="JobCreate">
      <title>Creating Jobs</title>
      <para>
In most cases, jobs will be created by the resource management system with the <link linkend="JobCharge">gcharge</link> command (See <link linkend="JobCharge">Charging Jobs</link>).
      </para>
      <para>
However, it is also possible to create job records by hand using the command <command>gold Job Create</command>:
      </para>
      <cmdsynopsis>
        <command>goldsh Job Create</command>
        <arg choice="plain">JobId=<replaceable>&lt;Job Id&gt;</replaceable></arg>
        <arg>User=<replaceable>&lt;User Name&gt;</replaceable></arg>
        <arg>Project=<replaceable>&lt;Project Name&gt;</replaceable></arg>
        <arg>Machine=<replaceable>&lt;Machine Name&gt;</replaceable></arg>
        <arg>Charge=<replaceable>&lt;Charge&gt;</replaceable></arg>
        <arg>Queue=<replaceable>&lt;Class or Queue&gt;</replaceable></arg>
        <arg>Type=<replaceable>&lt;Job Type&gt; (Normal)</replaceable></arg>
        <arg>Stage=<replaceable>&lt;Last Job Stage&gt;</replaceable></arg>
        <arg>QOS=<replaceable>&lt;Quality Of Service&gt;</replaceable></arg>
        <arg>Nodes=<replaceable>&lt;Number Of Nodes&gt;</replaceable></arg>
        <arg>Processors=<replaceable>&lt;Number Of Processors&gt;</replaceable></arg>
        <arg>State=<replaceable>&lt;Job State&gt;</replaceable></arg>
        <arg>Executable=<replaceable>&lt;Executable&gt;</replaceable></arg>
        <arg>Application=<replaceable>&lt;Application&gt;</replaceable></arg>
        <arg>StartTime=<replaceable>&lt;Start Time&gt;</replaceable></arg>
        <arg>EndTime=<replaceable>&lt;End Time&gt;</replaceable></arg>
        <arg>WallDuration=<replaceable>&lt;Wallclock Time in seconds&gt;</replaceable></arg>
        <arg>QuoteId=<replaceable>&lt;Quote Id&gt;</replaceable></arg>
        <arg>Description=<replaceable>&lt;Description&gt;</replaceable></arg>
        <arg>ShowUsage:=True</arg>
      </cmdsynopsis>
      <example>
        <title>Creating a job record</title>
        <para>
          <userinput><prompt>$ </prompt>
goldsh Job Create JobId=PBS.1234.0 User=jsmith Project=chem Machine=cluster Charge=2468 Processors=2 WallDuration=1234
          </userinput>
        </para>
        <screen>
Successfully created 1 Job
        </screen>
      </example>
    </sect1>

    <sect1 id="JobQuery">
      <title>Querying Jobs</title>
      <para>
To display job information, use the command <command>glsjob</command>:
      </para>
      <cmdsynopsis>
        <command>glsjob</command>
          <arg><arg>-J</arg> <replaceable>job_id_pattern</replaceable></arg>
          <arg>-p <replaceable>project_name</replaceable></arg>
          <arg>-u <replaceable>user_name</replaceable></arg>
          <arg>-m <replaceable>machine_name</replaceable></arg>
          <arg>-C <replaceable>queue</replaceable></arg>
          <arg>-T <replaceable>type</replaceable></arg>
          <arg>&mdash;stage <replaceable>stage</replaceable></arg>
          <arg>-s <replaceable>start_time</replaceable></arg>
          <arg>-e <replaceable>end_time</replaceable></arg>
          <arg rep="repeat">&mdash;show <replaceable>attribute_name</replaceable>[,<replaceable>attribute_name</replaceable>...]</arg>
          <arg>&mdash;showHidden</arg>
          <arg>&mdash;raw</arg>
          <arg>&mdash;debug</arg>
          <group>
            <arg>-?</arg>
            <arg>&mdash;help</arg>
          </group>
          <arg>&mdash;man</arg>
          <arg>&mdash;quiet</arg>
          <arg choice="opt"><arg>-j</arg> <replaceable>gold_job_id</replaceable></arg>
      </cmdsynopsis>
      <example>
        <title>Show specific info about jobs run by amy</title>
        <para>
          <userinput><prompt>$ </prompt>
glsjob &mdash;show=JobId,Project,Machine,Charge -u amy
          </userinput>
        </para>
        <screen>
JobId      Project   Machine Charge 
--------------- ------------- ---------- --------- 
PBS.1234.0 chemistry colony  0      
        </screen>
      </example>
    </sect1>

    <sect1 id="JobModify">
      <title>Modifying Jobs</title>
      <para>
It is possible to modify a job by using the command <command>goldsh Job Modify</command>:
      </para>
      <cmdsynopsis>
        <command>goldsh Job Modify</command>
        <group>
          <arg>JobId==<replaceable>&lt;Job Id&gt;</replaceable></arg>
          <arg>Id==<replaceable>&lt;Gold Job Id&gt;</replaceable></arg>
        </group>
        <arg>User=<replaceable>&lt;User Name&gt;</replaceable></arg>
        <arg>Project=<replaceable>&lt;Project Name&gt;</replaceable></arg>
        <arg>Machine=<replaceable>&lt;Machine Name&gt;</replaceable></arg>
        <arg>Charge=<replaceable>&lt;Charge&gt;</replaceable></arg>
        <arg>Queue=<replaceable>&lt;Class or Queue&gt;</replaceable></arg>
        <arg>Type=<replaceable>&lt;Job Type&gt;</replaceable></arg>
        <arg>Stage=<replaceable>&lt;Last Job Stage&gt;</replaceable></arg>
        <arg>QOS=<replaceable>&lt;Quality Of Service&gt;</replaceable></arg>
        <arg>Nodes=<replaceable>&lt;Number Of Nodes&gt;</replaceable></arg>
        <arg>Processors=<replaceable>&lt;Number Of Processors&gt;</replaceable></arg>
        <arg>State=<replaceable>&lt;Job State&gt;</replaceable></arg>
        <arg>Executable=<replaceable>&lt;Executable&gt;</replaceable></arg>
        <arg>Application=<replaceable>&lt;Application&gt;</replaceable></arg>
        <arg>StartTime=<replaceable>&lt;StartTime&gt;</replaceable></arg>
        <arg>EndTime=<replaceable>&lt;EndTime&gt;</replaceable></arg>
        <arg>WallDuration=<replaceable>&lt;Wallclock Time in seconds&gt;</replaceable></arg>
        <arg>QuoteId=<replaceable>&lt;Quote Id&gt;</replaceable></arg>
        <arg>Description=<replaceable>&lt;Description&gt;</replaceable></arg>
        <arg>ShowUsage:=True</arg>
      </cmdsynopsis>
      <caution> 
        <para>
The goldsh control program allows you to make powerful and sweeping modifications to gold objects. Misuse of this command could result in the inadvertent modification of all jobs.
        </para>
      </caution>
      <example>
        <title>Changing a job</title>
        <para>
          <userinput><prompt>$ </prompt>
goldsh Job Modify JobId==PBS.1234.0 Charge=1234 Description="Benchmark"
          </userinput>
        </para>
        <screen>
Successfully modified 1 Job
        </screen>
      </example>
    </sect1>

    <sect1 id="JobDelete">
      <title>Deleting Jobs</title>
      <para>
To delete a job, use the command <command>goldsh Job Delete</command>:
      </para>
      <cmdsynopsis>
        <command>goldsh Job Delete</command>
        <group>
          <arg>JobId==<replaceable>&lt;Job Id&gt;</replaceable></arg>
          <arg>Id==<replaceable>&lt;Id&gt;</replaceable></arg>
        </group>
      </cmdsynopsis>
      <caution> 
        <para>
The goldsh control program allows you to make powerful and sweeping modifications to gold objects. Misuse of this command could result in the inadvertent deletion of all jobs.
        </para>
      </caution>
      <example>
        <title>Deleting a job</title>
        <para>
          <userinput><prompt>$ </prompt>
goldsh Job Delete JobId==PBS.1234.0
          </userinput>
        </para>
        <screen>
Successfully deleted 1 Job
        </screen>
      </example>
    </sect1>

    <sect1 id="JobQuote">
      <title>Obtaining Job Quotes</title>
      <para>
Job quotes can be used to determine how much it will cost to run a job. This step verifies that the submitter has sufficient funds for, and meets all the allocation policy requirements for running the job and can be used at job submission as an early filter to prevent jobs from getting in and waiting in the job queue just to be blocked from running later. If a guaranteed quote is requested, a quote id is returned and can be used in the subsequent charge to guarantee the rates that were used to form the original quote. A guaranteed quote has the side effect of creating a quotation record and a permanent job record.
      </para>
      <para>
To request a job quote, use the command <command>gquote</command>:
      </para>
      <cmdsynopsis>
        <command>gquote</command>
        <arg>-p <replaceable>project_name</replaceable></arg>
        <arg>-u <replaceable>user_name</replaceable></arg>
        <arg>-m <replaceable>machine_name</replaceable></arg>
        <arg>-P <replaceable>processors</replaceable></arg>
        <arg>-M <replaceable>memory</replaceable></arg>
        <arg>-D <replaceable>disk</replaceable></arg>
        <arg>-Q <replaceable>QOS</replaceable></arg>
        <arg>-t <replaceable>wallclock_time</replaceable></arg>
        <arg>-s <replaceable>start_time</replaceable></arg>
        <arg>-e <replaceable>end_time</replaceable></arg>
        <arg>-d <replaceable>description</replaceable></arg>
        <arg>&mdash;guarantee</arg>
        <arg>&mdash;debug</arg>
        <group>
          <arg>-?</arg>
          <arg>&mdash;help</arg>
        </group>
        <arg>&mdash;man</arg>
        <arg>&mdash;quiet</arg>
        <group>
          <arg>-v</arg>
          <arg>&mdash;verbose</arg>
        </group>
      </cmdsynopsis>
      <example>
        <title>Requesting a quotation</title>
        <para>
          <userinput><prompt>$ </prompt>
gquote -p chemistry -u amy -m colony -P 2 -t 3600
          </userinput>
        </para>
        <screen>
Successfully quoted 7200 credits
        </screen>
      </example>
      <example>
        <title>Requesting a guaranteed quote</title>
        <para>
          <userinput><prompt>$ </prompt>
gquote -p chemistry -u amy -m colony -P 16 -t 3600 --guarantee
          </userinput>
        </para>
        <screen>
Successfully quoted 57600 credits with quote id 1
        </screen>
        <para>
          <userinput><prompt>$ </prompt>
glsquote
          </userinput>
        </para>
        <screen>
Id Amount Job Project   User Machine StartTime           EndTime             WallDuration Type   Used ChargeRates           Description
--- --------- ----- ------------- ------ ---------- ---------------------------- ---------------------------- ------------------ ---------- ------ ------------------------------- ----------------
1  57600  1   chemistry amy  colony  2005-01-14 10:09:58 2005-08-10 15:27:07 3600         Normal 0    Resource:Processors:1
        </screen>
      </example>
      <note>
        <para>
It is possible to establish a system default machine, project or user to be used in job functions (charge, reserve or quote) when left unspecified (see <link linkend="ServerConfig">Server Configuration</link>).
        </para>
      </note>
    </sect1>

    <sect1 id="JobReserve">
      <title>Making Job Reservations</title>
      <para>
A job reservation can be used to place a hold on the user's account before a job starts to ensure that the credits will be there when it completes.
      </para>
      <para>
To create a job reservation use the command <command>greserve</command>:
      </para>
      <cmdsynopsis>
        <command>greserve</command>
        <arg>-p <replaceable>project_name</replaceable></arg>
        <arg>-u <replaceable>user_name</replaceable></arg>
        <arg>-m <replaceable>machine_name</replaceable></arg>
        <arg>-P <replaceable>processors</replaceable></arg>
        <arg>-M <replaceable>memory</replaceable></arg>
        <arg>-D <replaceable>disk</replaceable></arg>
        <arg>-Q <replaceable>QOS</replaceable></arg>
        <arg>-t <replaceable>wallclock_time</replaceable></arg>
        <arg>-s <replaceable>start_time</replaceable></arg>
        <arg>-e <replaceable>end_time</replaceable></arg>
        <arg>-q <replaceable>quote_id</replaceable></arg>
        <arg>-d <replaceable>description</replaceable></arg>
        <arg>&mdash;replace</arg>
        <arg>&mdash;debug</arg>
        <group>
          <arg>-?</arg>
          <arg>&mdash;help</arg>
        </group>
        <arg>&mdash;man</arg>
        <arg>&mdash;quiet</arg>
        <group>
          <arg>-v</arg>
          <arg>&mdash;verbose</arg>
        </group>
        <arg choice="req"><arg>-J</arg> <replaceable>job_id</replaceable></arg>
      </cmdsynopsis>
      <example>
        <title>Creating a reservation</title>
        <para>
          <userinput><prompt>$ </prompt>
greserve -J PBS.1234.0 -p chemistry -u amy -m colony -P 2 -t 3600
          </userinput>
        </para>
        <screen>
Successfully reserved 7200 credits for job PBS.1234.0
        </screen>
      </example>
      <note>
        <para>
It is possible to establish a system default machine, project or user to be used in job functions (charge, reserve or quote) when left unspecified (see <link linkend="ServerConfig">Server Configuration</link>).
        </para>
      </note>
    </sect1>

    <sect1 id="JobCharge">
      <title>Charging Jobs</title>
      <para>
A job charge debits the appropriate allocations based on the user, project and machine associated with the job. The charge is calculated based on factors including the resources used, the job run time, and other quality-based factors (See <link linkend="ChargeRates">Managing Charge Rates</link>).
      </para>
      <para>
To charge for a job use the command <command>gcharge</command>:
      </para>
      <cmdsynopsis>
        <command>gcharge</command>
        <arg>-p <replaceable>project_name</replaceable></arg>
        <arg>-u <replaceable>user_name</replaceable></arg>
        <arg>-m <replaceable>machine_name</replaceable></arg>
        <arg>-P <replaceable>processors</replaceable></arg>
        <arg>-N <replaceable>nodes</replaceable></arg>
        <arg>-M <replaceable>memory</replaceable></arg>
        <arg>-D <replaceable>disk</replaceable></arg>
        <arg>-Q <replaceable>QOS</replaceable></arg>
        <arg>-t <replaceable>wallclock_time</replaceable></arg>
        <arg>-S <replaceable>job_state</replaceable></arg>
        <arg>-T <replaceable>job_type</replaceable></arg>
        <arg>&mdash;application <replaceable>application</replaceable></arg>
        <arg>&mdash;executable <replaceable>executable</replaceable></arg>
        <arg>-C <replaceable>queue</replaceable></arg>
        <arg>-s <replaceable>start_time</replaceable></arg>
        <arg>-e <replaceable>end_time</replaceable></arg>
        <arg>-q <replaceable>quote_id</replaceable></arg>
        <arg>&mdash;debug</arg>
        <group>
          <arg>-?</arg>
          <arg>&mdash;help</arg>
        </group>
        <arg>&mdash;man</arg>
        <arg>&mdash;quiet</arg>
        <group>
          <arg>-v</arg>
          <arg>&mdash;verbose</arg>
        </group>
        <arg choice="req"><arg>-J</arg> <replaceable>job_id</replaceable></arg>
      </cmdsynopsis>
      <example>
        <title>Issuing a job charge</title>
        <para>
          <userinput><prompt>$ </prompt>
gcharge -J PBS.1234.0 -p chemistry -u amy -m colony -P 2 -t 1234
          </userinput>
        </para>
        <screen>
Successfully charged job PBS.1234.0 for 2468 credits
1 reservations were removed
        </screen>
      </example>
      <note>
        <para>
It is possible to establish a system default machine, project or user to be used in job functions (charge, reserve or quote) when left unspecified (see <link linkend="ServerConfig">Server Configuration</link>).
        </para>
      </note>
    </sect1>

    <sect1 id="JobRefund">
      <title>Issuing Job Refunds</title>
      <para>
A job can be refunded in part or in whole by issuing a job refund. This action attempts to lookup the referenced job to ensure that the refund does not exceed the original charge and so that the charge entry can be updated. If multiple matches are found (such as the case when job ids are non-unique), this command will return the list of matched jobs with unique ids so that the correct job can be specified for the refund.
      </para>
      <para>
To issue a refund for a job, use the command <command>grefund</command>:
      </para>
      <cmdsynopsis>
        <command>grefund</command>
        <arg>-J <replaceable>job_id</replaceable></arg>
        <arg><arg>-j</arg> <replaceable>gold_job_id</replaceable></arg>
        <arg>-z <replaceable>amount</replaceable></arg>
        <arg>-a <replaceable>account_id</replaceable></arg>
        <arg>-d <replaceable>description</replaceable></arg>
        <group>
          <arg>-h</arg>
          <arg>&mdash;hours</arg>
        </group>
        <arg>&mdash;debug</arg>
        <group>
          <arg>-?</arg>
          <arg>&mdash;help</arg>
        </group>
        <arg>&mdash;man</arg>
        <arg>&mdash;quiet</arg>
        <group>
          <arg>-v</arg>
          <arg>&mdash;verbose</arg>
        </group>
      </cmdsynopsis>
      <example>
        <title>Issuing a job refund</title>
        <para>
          <userinput><prompt>$ </prompt>
grefund -J PBS.1234.0
          </userinput>
        </para>
        <screen>
Successfully refunded 19744 credits for job PBS.1234.0
        </screen>
      </example>
    </sect1>

  </chapter>
