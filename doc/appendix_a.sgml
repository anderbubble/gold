<chapter id="AppendixA">
    <title>Appendix A: Compiling Dependencies From Source</title>
    <para>
Gold uses the standard configure, make and make install steps that we
all know and love. However, there are a number of preparation,
prerequisite, setup and customization steps that need to be
performed. This document provides general installation guidance and
provides a number of sample steps referenced to a particular
installation on a Linux platform using the bash shell. These steps
indicate the userid in brackets performing the step. The exact
commands to be performed and the user that issues them will vary based
on the platform, shell, installation preferences, etc. 
    </para>

    <sect1 id="InstallingPrerequisitesFromSource">
      <title>Installing Prerequisites From Source</title>
      <para>
Follow these instructions if you cannot find or do not wish to use binary packages.  Note that URL's and installation steps may change with time.  The following intructions were valid at the time of their writing.
      </para>

      <sect2>
        <title>Perl 5.6.1 or higher (with suidperl) [REQUIRED]</title>
        <para>
The gold server and clients are written in Perl. Perl 5.6.1 or higher
is required. The perl installation must include suidperl for proper
client authentication. Use 'perl -v' to see what level of Perl is
installed and 'suidperl -v' to see if suidperl is installed. 
Perl is available at: &lt;http://www.perl.com/&gt;
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
cd /usr/local/src
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
wget http://www.cpan.org/src/stable.tar.gz
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
gzip -cd stable.tar.gz | tar xvf -
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
cd perl-5.8.5
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
sh Configure -Dd_dosuid -de
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
make
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
make test
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
make install
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
(cd /usr/include &amp;&amp; /usr/local/bin/h2ph *.h sys/*.h)
          </userinput>
        </para>
      </sect2>

      <sect2>
        <title>libxml2 2.4.25 or higher [REQUIRED]</title>
        <para>
LibXML2 is needed by the XML::LibXML perl module to communicate via the SSSRMAP message format.
LibXML2 is available at: &lt;http://www.xmlsoft.org/&gt;
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
cd /usr/local/src
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
wget &mdash;passive-ftp ftp://xmlsoft.org/libxml2-2.6.17.tar.gz
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
gzip -cd libxml2-2.6.17.tar.gz | tar xvf -
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
cd libxml2-2.6.17
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
./configure
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
make
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
make install
          </userinput>
        </para>
      </sect2>

      <sect2>
        <title>PostgreSQL database 7.2 or higher [OPTIONAL]</title>
        <para>
Gold makes use of a database for transactions and data persistence. Two databases have been tested for use with Gold thus far: PostgreSQL and SQLite. Postgres is an external database that must be separately installed configured and started, while SQLite is an embedded database bundled with the Gold source code. If you intend to use the PostgreSQL database, you will need to install it.
PostgreSQL is available at: &lt;http://www.postgresql.org/&gt;
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
cd /usr/local/src
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
wget ftp://ftp3.us.postgresql.org/pub/postgresql/source/v7.4.5/postgresql-7.4.5.tar.gz
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
gzip -cd postgresql-7.4.5.tar.gz | tar xvf -
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
cd postgresql-7.4.5
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
./configure
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
make
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
make install
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
adduser postgres
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
mkdir /usr/local/pgsql/data
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
chown postgres /usr/local/pgsql/data
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
touch /var/log/pgsql
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
chown postgres /var/log/pgsql
          </userinput>
        </para>
      </sect2>

      <sect2>
        <title>Gnu readline 2.0 or higher [OPTIONAL]</title>
        <para>
The interactive control program (goldsh) can support command-line-editing capabilities if readline support is enabled. Most recent linux distributions come with the appropriate readline support.
Gnu readline is available at: &lt;http://www.gnu.org/&gt;
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
cd /usr/local/src
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
wget http://ftp.gnu.org/gnu/readline/readline-5.0.tar.gz
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
gzip -cd readline-5.0.tar.gz | tar xvf -
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
cd readline-5.0
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
./configure
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
make
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
make install
          </userinput>
        </para>
      </sect2>

      <sect2>
        <title>Apache Httpd Server 2.0 or higher [OPTIONAL]</title>
        <para>
Gold provides a web based gui so that managers, users and administrators can interact with the accounting and allocation system. This alpha gui is still under active development and has not been widely tested, however, it is made available at this stage in the hopes that it may be useful to you as is, and so that we can receive feedback, improvements, etc. The web interface utilizes Perl CGI and SSL and needs an httpd server (preferably apache).
Apache httpd is available at: &lt;http://httpd.apache.org/&gt;
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>
cd /usr/local/src
          </userinput>
        </para>
      </sect2>

      <sect2>
        <title>OpenSSL 0.9.5a or higher [OPTIONAL]</title>
        <para>
If you are installing the gui, you will need SSL (preferably OpenSSL).  OpenSSL is a command line toolkit for using secure socket layer encryption on a server.
OpenSSL is available at: &lt;http://www.openssl.org/&gt;
        </para>
        <para>
	  <userinput><prompt>[root]# </prompt>wget openssl.tar.gz
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>tar -xvzf openssl.tar.gz
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>cd openssl
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>./config shared --prefix=/usr/local/
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>make 
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt>make install
          </userinput>
        </para>
      </sect2>
      <sect2>
        <title>mod_ssl 2.26 or higher [OPTIONAL]</title>
        <para>
If you are installing the gui, you will need an apache interface to OpenSSL (preferable mod_ssl).  There are other alternatives to mod_ssl (one of which is apache-ssl from which the mod_ssl code was forked), however, mod_ssl has become the defacto standard and is the most widely adopted.  You will need the apache source tree to compile mod_ssl.
mod_ssl is available at: &lt;http://www.modssl.org/&gt;
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> cd /usr/local/src
          </userinput>
        </para>
        <para>
	  <userinput><prompt>[root]# </prompt> wget http://www.modssl.org/source/mod_ssl-2.x.xxxx.tar.gz
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> tar -xvzf mod_ssl-2.x.xxxx.tar.gz 
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> ./configure --with-apache=$APACHE_SRC_DIR 
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> make
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> make install
          </userinput>
        </para>

      </sect2>

      <sect2>
        <title>Python [OPTIONAL]</title>
        <para>
If you are installing ssslib, you will need to install the Python programming language.
Python is available at: &lt;http://www.python.org/ftp/python/2.4.3/Python-2.4.3.tgz&gt;
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> cd /usr/local/src
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> wget http://www.python.org/ftp/python/2.4.3/Python-2.4.3.tgz
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> tar -xvzf Python-2.4.3.tgz
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> cd Python-2.4.3
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> ./configure --prefix=/usr/local
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> make
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> make install
          </userinput>
        </para>

      </sect2>


      <sect2>
        <title>elementtree [OPTIONAL]</title>
        <para>
If you are installing ssslib, you will need to install the elementtree toolkit.
elementtree is available at: &lt;http://effbot.org/downloads/&gt;
	</para>
        <para>
          <userinput><prompt>[root]# </prompt> cd /usr/local/src
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> wget http://effbot.org/downloads/elementtree-1.2.6-20050316.tar.gz
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> tar -xvzf elementtree-1.2-20040618.tar.gz 
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> cd elementtree-1.2-20040618
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> python setup.py build  
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> python setup.py install
          </userinput>
        </para>
      </sect2>

      <sect2>
        <title>ssslib [OPTIONAL]</title>
        <para>
The ssslib package can be installed if you would like to use the Scalable System Software directory service.
ssslib is available at: &lt;ftp://ftp.mcs.anl.gov/pub/sss/&gt;. 
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> cd /usr/local/src
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> wget ftp://ftp.mcs.anl.gov/pub/sss/sss-0.99.1.tar.gz
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> tar -xvzf sss-0.99.1.tar.gzz
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> cd sss-0.99.1
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> ./configure --prefix=/usr/local
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> make
          </userinput>
        </para>
        <para>
          <userinput><prompt>[root]# </prompt> make install
          </userinput>
        </para>

      </sect2>
    </sect1>

</chapter>
